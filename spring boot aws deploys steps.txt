=> download pem file while creating instance
=> in local sytem cmd go to downloads
=> ssh -i "spring-demo.pem" ec2-user@ec2-13-234-17-222.ap-south-1.compute.amazonaws.com
=> yum install java-sdk
=> java -version must be 1.8 or above
=> sudo vi /etc/yum.repos.d/mongodb-org-4.0.repo
=> enter below code
---------------------------------------------------------------------------------
[mongodb-org-4.0]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/amazon/2013.03/mongodb-org/4.0/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc
------------------------------------------------------------------------------------
=> sudo yum install -y mongodb-org
=> sudo service mongod start
=> sudo cat /var/log/mongodb/mongod.log   ===> shows working on 27017 port or not
=> sudo chkconfig mongod on ===> incase server restarts or power outage mongodb starts on boot
=> mongo
=> use Hotel
=> db.createUser({user: "karthik", pwd: "1234", roles:[{role: "readWrite", db:"Hotel"}] })  ==> adds user
=> exit ==> exits from mongo
=> sudo vi /etc/mongod.conf
=> enter below code
---------------------------------------------------------------------------------------
#mongod.conf

# for documentation of all options, see:
# http://docs.mongod.org/manual/reference/configuration-options/

# where to write ogging data.
systemLog:
  destination: file
  logAppend: true
  path: /var/log/mongodb/mongod.log

# Where and how to store data.
storage:
  dbPath: /var/lib/mongo
  journal:
        enabled: true
# engine:
# mmapv1:
# wiredTiger:

# how the process runs
processManagement:
  fork: true  # fork and run in background
  pidFilePath: /var/run/mongodb/mongod.pid  # location of pidfile
  timeZoneInfo: /usr/share/zoneinfo

# network interfaces
net:
  port: 27017
  bindIp: 0.0.0.0  # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.


# security:
security:
  authorization: 'enabled'

# operationProfiling:

# replication:

# sharding:

## Enterprise-Only Options
--------------------------------------------------------------------------------------
=> sudo service mongod restart
=> copy Public IPv4 DNS of instance and add it in loacalhost place of properties in spring boot
=> spring.data.mongodb.uri=mongodb://karthik:1234@ec2-13-234-17-222.ap-south-1.compute.amazonaws.com/Hotel
=> build to jar file and upload it in s3 bucket and make it publicly accessible while uploading
=> copy the file link and in instance cmd ===> wget link
=> java -jar stored-file-name.js
=> in security group add tag 27017 to access everywhere
